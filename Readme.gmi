# mokubune - a static gemini site generator

A static gemini site generating program written in Common Lisp, try to be as intuitive  and flexible as possible.
* Try to be intuitive when selecting template file to apply. I found some other similar programs have very confusing template selecting logic.
* Don't regenerate pages that has no change on its dependencies. This is one of the reasons I write this program - the tool I previously used regenerates everything each time, which is inconvenience when for example publishing site via rsync.
* Support pipeline - for example I use it to produce a gemini capsule, and then generate a HTML site from the capsule.

=> https://codeberg.org/cranej/mokubune mokubune

# Installation
mokubune has been tested only on SBCL and Linux.

Dependencies that are not on ``Quicklisp`` yet:

=> https://codeberg.org/cranej/cl-glob cl-glob
=> https://codeberg.org/cranej/cl-template-trim cl-template-trim

You need to download them manually.

Install:
```
$ clone https://codeberg.org/cranej/mokubune
$ cd mokubune
$ make
$ make install #if you wish
```

# Usage
```shell
$ mokubune --help

Usage: mokubune
  Process current directory.

Usage: mokubune <flag>
  -init             Create default templates and directory layout in current directoy.
  -version          Print version information and exit.
```

Please refer to the code of my blog as an example.

=> https://codeberg.org/cranej/gemlog My blog

## Configuration

*to be documented*

## Template Syntax

mokubune use cl-template-trim, please refer to its documentation:

=> https://codeberg.org/cranej/cl-template-trim cl-template-trim

### Variables available in templates

*to be documented*
  
# Template Selection

The general rule is, mokubune firstly try to use the most specific template for the content, and if it does not exist, fallback to the one at the root of templates directory.
This provides a possibility to use different templates for some contents.

## Regular page
All files under contents directory other than index files (the one configured via ``index-config`` slot of ``stage``) are treated as regular pages. The first exists template file at the following locations will be used:
* templates/<corresponding sub directories>/page.clt
* templates/page.clt

For example, for page "contents/sub1/post-123.gmi", if "templates/sub1/page.clt" exists, it will be used. Otherwise use "templates/page.clt".

## Index pages
Index pages are special. The usual workflow for static site generating program is something more or less like translating contents wrote by users to destination directory.
But for index pages, it's not unusual that there is no user wrote content at all. Some other similar programs require there is at least a empty file inside contents directory, only then index pages will be generated.
mokubune takes a different approach that if it's able to find applicable template files, index pages are generated even there is no corresponding pages in contents directory.

### Root index page
Root index page is the index page at your site's root.
* Always use template file "templates/index.clt".
* If there is no such file, root index page will not be generated.
  
### Index page of sub directories
Index page will be generated for sub directories if there is a template file which is "applicable". 

If there is a source index file under the corresponding contents sub directory, the first exists template at the following locations will be used:
* templates/<sub directory>/index.clt
* templates/sub-index.clt
* templates/index.clt

If there is no source index file exists, index page will be generated only when the following template file exists:
* templates/<sub directory>/index.clt 

